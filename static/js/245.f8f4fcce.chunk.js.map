{"version":3,"file":"static/js/245.f8f4fcce.chunk.js","mappings":"gLAaaA,EAAa,SAAH,GAAoD,IAA9CC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAClCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GAChBL,IACFK,EAAMC,iBACNJ,EAASH,GAEb,EASA,OACE,cAAGQ,UAAU,cAAcR,KAAMA,EAAMS,UARlB,SAACH,GAClB,CAAC,QAAS,KAAKI,SAASJ,EAAMK,MAEhCN,EAAaC,EAEjB,EAGoEM,QAASP,EAAa,SACrFH,GAGP,C,wFCzBaW,EAAa,SAAH,GAAuC,IAAjCX,EAAQ,EAARA,SACrBY,EAAoBC,EAAAA,SAAAA,IAAmBb,GAAU,SAACc,GACtD,GAAID,EAAAA,eAAqBC,GACvB,OACE,gBAAKR,UAAU,WAAWS,OAAOC,EAAAA,EAAAA,GAAuB,EAAG,KAAK,SAC7DH,EAAAA,aAAmBC,IAI5B,IAEA,OAAO,SAAC,EAAAG,SAAQ,UAAEL,GACpB,C,6FCWA,UA1BgB,WACd,OACE,gBAAKN,UAAU,iBAAgB,UAC7B,UAAC,IAAU,YACT,wBAAI,wCACJ,SAAC,IAAc,CAACY,WAAW,KAC3B,uBAAG,kIAIH,iBAAKZ,UAAU,gBAAe,WAC5B,SAAC,IAAM,CAACR,KAAK,uCAAuCqB,KAAK,cACzD,SAAC,IAAM,CAACrB,KAAK,gCAAgCqB,KAAK,cAEpD,yBAAG,0CACuC,KACxC,SAAC,IAAU,CAACrB,KAAK,wBAAuB,SAAC,4BAI3C,cAAGQ,UAAU,aAAY,SAAC,kDAIlC,C","sources":["general/InlineLink.tsx","general/SlideInAll.tsx","pages/Contact.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./InlineLink.scss\";\n\nexport interface InlineLinkProps {\n  href: string;\n  local?: boolean;\n  children?: React.ReactNode;\n}\n\n/**\n * A purely based with text, no borders like a button.\n */\nexport const InlineLink = ({ href, local, children }: InlineLinkProps) => {\n  const navigate = useNavigate();\n\n  const clickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    if (local) {\n      event.preventDefault();\n      navigate(href);\n    }\n  };\n\n  const keyDownhandler = (event: React.KeyboardEvent<HTMLAnchorElement>) => {\n    if ([\"Enter\", \" \"].includes(event.key)) {\n      // For what we use it for, this cast is safe.\n      clickHandler(event as unknown as React.MouseEvent<HTMLAnchorElement>);\n    }\n  };\n\n  return (\n    <a className=\"inline-link\" href={href} onKeyDown={keyDownhandler} onClick={clickHandler}>\n      {children}\n    </a>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { generateAnimationDelay } from \"../util/generateAnimationDelay\";\n\nexport interface SlideInAllProps {\n  children: React.ReactNode;\n}\n\n/**\n * Component that applies a slide in effect to all direct children\n */\nexport const SlideInAll = ({ children }: SlideInAllProps) => {\n  const childrenWithProps = React.Children.map(children, (child) => {\n    if (React.isValidElement(child)) {\n      return (\n        <div className=\"shift-in\" style={generateAnimationDelay(0, 500)}>\n          {React.cloneElement(child)}\n        </div>\n      );\n    }\n  });\n\n  return <Fragment>{childrenWithProps}</Fragment>;\n};\n","import { SlideInAll } from \"../general/SlideInAll\";\nimport { HorizontalLine } from \"../ambient/layout/HorizontalLine\";\nimport \"./Pages.scss\";\nimport { InlineLink } from \"../general/InlineLink\";\nimport { Button } from \"../general/Button\";\n\n// Contact page\nconst Contact = () => {\n  return (\n    <div className=\"page-container\">\n      <SlideInAll>\n        <h2>Professional Inquries ðŸ’¼</h2>\n        <HorizontalLine leftBrace={false} />\n        <p>\n          I'm always interested in hearing about exciting new opportunities. If\n          you'd like to reach out to me, use the channels below:\n        </p>\n        <div className=\"row-container\">\n          <Button href=\"https://www.linkedin.com/in/dawnshee\" text=\"LinkedIn\" />\n          <Button href=\"mailto:contact@dawnsheedy.com\" text=\"Email\" />\n        </div>\n        <p>\n          For a simplified, PDF copy of my resume{\" \"}\n          <InlineLink href=\"/resume-dawn-2023.pdf\">\n            you can click here.\n          </InlineLink>\n        </p>\n        <p className=\"mono quote\">Note: I'm currently based in Seattle, WA.</p>\n      </SlideInAll>\n    </div>\n  );\n};\n\nexport default Contact;\n"],"names":["InlineLink","href","local","children","navigate","useNavigate","clickHandler","event","preventDefault","className","onKeyDown","includes","key","onClick","SlideInAll","childrenWithProps","React","child","style","generateAnimationDelay","Fragment","leftBrace","text"],"sourceRoot":""}