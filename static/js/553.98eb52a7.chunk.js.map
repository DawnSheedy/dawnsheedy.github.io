{"version":3,"file":"static/js/553.98eb52a7.chunk.js","mappings":"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","sources":["content/JobHistory.ts","content/SkillList.ts","content/contentTypes.ts","fragments/SkillList/SkillListItem.tsx","fragments/SkillList/SkillList.tsx","general/SlideInAll.tsx","pages/ExperienceDetailPage.tsx"],"sourcesContent":["import { JobListing } from \"./contentTypes\";\nimport { SkillListRecord } from \"./SkillList\";\n\nconst cwanJobEntry: JobListing = {\n  startDate: new Date(2022, 7),\n  company: \"Clearwater Analytics\",\n  website: \"https://clearwateranalytics.com\",\n  title: \"L2 Software Development Engineer\",\n  skills: [\n    SkillListRecord.java,\n    SkillListRecord.javaScript,\n    SkillListRecord.typeScript,\n    SkillListRecord.stylesheets,\n    SkillListRecord.microservices,\n    SkillListRecord.rest,\n    SkillListRecord.react,\n    SkillListRecord.angular,\n    SkillListRecord.cypress,\n    SkillListRecord.jest,\n    SkillListRecord.docker,\n    SkillListRecord.nginx,\n    SkillListRecord.postgres,\n    SkillListRecord.SQL,\n    SkillListRecord.kubernetes,\n    SkillListRecord.jenkins,\n    SkillListRecord.git,\n    SkillListRecord.ciCd,\n    SkillListRecord.aws,\n    SkillListRecord.gcp,\n    SkillListRecord.storybook,\n    SkillListRecord.webpack,\n    SkillListRecord.babel,\n    SkillListRecord.agile,\n    SkillListRecord.planning,\n    SkillListRecord.jira,\n    SkillListRecord.confluence,\n    SkillListRecord.interviewing,\n    SkillListRecord.collaboration,\n    SkillListRecord.skillBuilding,\n    SkillListRecord.selfDirection,\n    SkillListRecord.timeManagement,\n    SkillListRecord.linux,\n  ],\n  description: \"Test Description.\",\n  slug: \"clearwater-analytics\",\n  richContent: [\n    {\n      heading: \"Overview üõ∞Ô∏è\",\n      paragraphs: [\"Test paragraph 1\", \"test paragraph 2\"],\n    },\n  ],\n};\n\nconst pressHookJobEntry: JobListing = {\n  startDate: new Date(2021, 9),\n  endDate: new Date(2022, 7),\n  company: \"Press Hook\",\n  website: \"https://presshook.com\",\n  title: \"Full Stack Software Engineer\",\n  skills: [SkillListRecord.java, SkillListRecord.javaScript],\n  description: \"Test Description.\",\n  slug: \"press-hook\",\n};\n\nconst kinstoneJobEntry: JobListing = {\n  startDate: new Date(2016, 8),\n  endDate: new Date(2022, 2),\n  company: \"Kinstone, LLC\",\n  website: \"https://www.linkedin.com/company/kinstone-events\",\n  title: \"Volunteer Software Developer\",\n  skills: [SkillListRecord.java, SkillListRecord.javaScript],\n  description: \"Test Description.\",\n  slug: \"kinstone\",\n};\n\nexport const JobHistory = [cwanJobEntry, pressHookJobEntry, kinstoneJobEntry];\n","import { Skill, SkillCategory } from \"./contentTypes\";\n\n/**\n * Master set of skills used across content types such as projects and employment history.\n */\nexport const SkillListRecord: Record<string, Skill> = {\n    // Programming Related Skills\n    javaScript: { skillName: 'JavaScript', category: SkillCategory.PROGRAMMING },\n    typeScript: { skillName: 'TypeScript', category: SkillCategory.PROGRAMMING },\n    python: { skillName: 'Python', category: SkillCategory.PROGRAMMING },\n    java: { skillName: 'Java', category: SkillCategory.PROGRAMMING },\n    cSharp: { skillName: 'C#', category: SkillCategory.PROGRAMMING },\n    stylesheets: { skillName: 'CSS/SASS/SCSS', category: SkillCategory.PROGRAMMING },\n    websockets: { skillName: 'Websockets', category: SkillCategory.PROGRAMMING },\n    microservices: { skillName: 'Microservices', category: SkillCategory.PROGRAMMING },\n    rest: { skillName: 'RESTful APIs', category: SkillCategory.PROGRAMMING },\n\n    // Libraries\n    react: { skillName: 'React', category: SkillCategory.LIBRARIES },\n    angular: { skillName: 'Angular', category: SkillCategory.LIBRARIES },\n    django: { skillName: 'Django', category: SkillCategory.LIBRARIES },\n    drf: { skillName: 'Django Rest Framework', category: SkillCategory.LIBRARIES },\n    express: { skillName: 'Express', category: SkillCategory.LIBRARIES },\n    socketIO: { skillName: 'Socket.IO', category: SkillCategory.LIBRARIES },\n    cypress: { skillName: 'Cypress', category: SkillCategory.LIBRARIES },\n    jest: { skillName: 'Jest', category: SkillCategory.LIBRARIES },\n    unity: { skillName: 'Unity', category: SkillCategory.LIBRARIES },\n    alexa: { skillName: 'Alexa API', category: SkillCategory.LIBRARIES },\n    twitch: { skillName: 'Twitch API', category: SkillCategory.LIBRARIES },\n\n    // Deployments\n    docker: { skillName: 'Docker', category: SkillCategory.DEPLOYMENTS },\n    nginx: { skillName: 'Nginx', category: SkillCategory.DEPLOYMENTS },\n    postgres: { skillName: 'Postgres', category: SkillCategory.DEPLOYMENTS },\n    SQL: { skillName: 'SQL', category: SkillCategory.DEPLOYMENTS },\n    kubernetes: { skillName: 'Kubernetes', category: SkillCategory.DEPLOYMENTS },\n    jenkins: { skillName: 'Jenkins', category: SkillCategory.DEPLOYMENTS },\n    git: { skillName: 'Git', category: SkillCategory.DEPLOYMENTS },\n    ciCd: { skillName: 'CI/CD', category: SkillCategory.DEPLOYMENTS },\n    heroku: { skillName: 'Heroku', category: SkillCategory.DEPLOYMENTS },\n    aws: { skillName: 'AWS', category: SkillCategory.DEPLOYMENTS },\n    gcp: { skillName: 'Google Cloud Platform', category: SkillCategory.DEPLOYMENTS },\n    azure: { skillName: 'Azure', category: SkillCategory.DEPLOYMENTS },\n    storybook: { skillName: 'Storybook', category: SkillCategory.DEPLOYMENTS },\n    webpack: { skillName: 'Webpack', category: SkillCategory.DEPLOYMENTS },\n    babel: { skillName: 'Babel', category: SkillCategory.DEPLOYMENTS },\n\n    // Business\n    agile: { skillName: 'Agile', category: SkillCategory.BUSINESS },\n    planning: { skillName: 'Planning', category: SkillCategory.BUSINESS },\n    jira: { skillName: 'Jira', category: SkillCategory.BUSINESS },\n    confluence: { skillName: 'Confluence', category: SkillCategory.BUSINESS },\n    interviewing: { skillName: 'Interviewing', category: SkillCategory.BUSINESS },\n    collaboration: { skillName: 'Collaboration', category: SkillCategory.BUSINESS },\n    skillBuilding: { skillName: 'Skill Building', category: SkillCategory.BUSINESS },\n    selfDirection: { skillName: 'Self-Direction', category: SkillCategory.BUSINESS },\n    timeManagement: { skillName: 'Time Management', category: SkillCategory.BUSINESS },\n\n    // Misc\n    linux: { skillName: 'Linux/Unix', category: SkillCategory.MISC },\n    arduino: { skillName: 'Arduino', category: SkillCategory.MISC },\n    reverseEngineering: { skillName: 'Reverse Engineering', category: SkillCategory.MISC },\n    afterEffects: { skillName: 'Adobe After Effects', category: SkillCategory.MISC },\n    photoShop: { skillName: 'Adobe Photoshop', category: SkillCategory.MISC },\n    hardwareMod: { skillName: 'Hardware Modification', category: SkillCategory.MISC },\n    dmx: { skillName: 'DMX Protocol', category: SkillCategory.MISC },\n}","export enum SkillCategory {\n    PROGRAMMING,\n    LIBRARIES,\n    DEPLOYMENTS,\n    BUSINESS,\n    MISC\n}\n\nexport interface Skill {\n    skillName: string;\n    category: SkillCategory\n}\n\nexport interface RichContentSection {\n    heading: string;\n    paragraphs: string[];\n}\n\nexport interface JobListing {\n    startDate: Date;\n    endDate?: Date;\n    company: string;\n    website: string;\n    title: string;\n    skills: Skill[]\n    description: string;\n    slug: string;\n    richContent?: RichContentSection[]\n}","import { useState } from \"react\";\nimport { Skill } from \"../../content/contentTypes\";\nimport { generateAnimationDelay } from \"../../util/generateAnimationDelay\";\nimport \"./SkillListItem.scss\";\n\nexport interface SkillListItemProps {\n  skill: Skill;\n}\n\n/**\n * Item in the skill list\n */\nexport const SkillListItem = ({ skill }: SkillListItemProps) => {\n  const animationDelay = useState(generateAnimationDelay(0, 250))[0];\n  return (\n    <div className=\"skill-list-item-container shift-in\" style={animationDelay}>\n      {skill.skillName}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Skill, SkillCategory } from \"../../content/contentTypes\";\nimport { SkillListRecord } from \"../../content/SkillList\";\nimport { generateClassNames } from \"../../util/generateClassNames\";\nimport \"./SkillList.scss\";\nimport { SkillListItem } from \"./SkillListItem\";\n\nexport interface SkillListProps {\n  skillSet?: Skill[];\n}\n\n/**\n * A list of skills.\n * Shows all defined skills if no skillSet provided\n */\nexport const SkillList = ({ skillSet }: SkillListProps) => {\n  const [skillList, setSkillList] = useState(\n    skillSet ? skillSet : Object.values(SkillListRecord)\n  );\n  const [filter, setFilter] = useState<SkillCategory>(\n    SkillCategory.PROGRAMMING\n  );\n\n  useEffect(() => {\n    setSkillList(\n      [...(skillSet ? skillSet : Object.values(SkillListRecord)).filter(\n        (value) => value.category === filter\n      )]\n    );\n  }, [skillSet, filter]);\n\n  const getFilterCallback = (filter: SkillCategory) => {\n    return () => {\n      setFilter(filter);\n    };\n  };\n\n  return (\n    <div className=\"skill-list-container\">\n      <div className=\"skill-list-container-header\">\n        <button\n          className={generateClassNames({\n            \"skill-list-tab\": true,\n            mono: true,\n            capital: true,\n            active: filter === SkillCategory.PROGRAMMING,\n          })}\n          onClick={getFilterCallback(SkillCategory.PROGRAMMING)}\n        >\n          Development\n        </button>\n        <button\n          className={generateClassNames({\n            \"skill-list-tab\": true,\n            mono: true,\n            capital: true,\n            active: filter === SkillCategory.LIBRARIES,\n          })}\n          onClick={getFilterCallback(SkillCategory.LIBRARIES)}\n        >\n          Libraries & Apis\n        </button>\n        <button\n          className={generateClassNames({\n            \"skill-list-tab\": true,\n            mono: true,\n            capital: true,\n            active: filter === SkillCategory.DEPLOYMENTS,\n          })}\n          onClick={getFilterCallback(SkillCategory.DEPLOYMENTS)}\n        >\n          Tools\n        </button>\n        <button\n          className={generateClassNames({\n            \"skill-list-tab\": true,\n            mono: true,\n            capital: true,\n            active: filter === SkillCategory.BUSINESS,\n          })}\n          onClick={getFilterCallback(SkillCategory.BUSINESS)}\n        >\n          Business\n        </button>\n        <button\n          className={generateClassNames({\n            \"skill-list-tab\": true,\n            mono: true,\n            capital: true,\n            active: filter === SkillCategory.MISC,\n          })}\n          onClick={getFilterCallback(SkillCategory.MISC)}\n        >\n          MISC\n        </button>\n      </div>\n      <div className=\"skill-list-container-body\">\n        {skillList.map((skill) => (\n          <SkillListItem key={skill.skillName} skill={skill} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { generateAnimationDelay } from \"../util/generateAnimationDelay\";\n\nexport interface SlideInAllProps {\n  children: React.ReactNode;\n}\n\n/**\n * Component that applies a slide in effect to all direct children\n */\nexport const SlideInAll = ({ children }: SlideInAllProps) => {\n  const childrenWithProps = React.Children.map(children, (child) => {\n    if (React.isValidElement(child)) {\n      return (\n        <div className=\"shift-in\" style={generateAnimationDelay(0, 500)}>\n          {React.cloneElement(child)}\n        </div>\n      );\n    }\n  });\n\n  return <Fragment>{childrenWithProps}</Fragment>;\n};\n","import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { CenterContentContainer } from \"../ambient/layout/CenterContentContainer\";\nimport { HorizontalLine } from \"../ambient/layout/HorizontalLine\";\nimport { PageHeading } from \"../ambient/layout/PageHeading\";\nimport { JobListing } from \"../content/contentTypes\";\nimport { JobHistory } from \"../content/JobHistory\";\nimport { SkillList } from \"../fragments/SkillList/SkillList\";\nimport { Button } from \"../general/Button\";\nimport { SlideInAll } from \"../general/SlideInAll\";\n\n/**\n * Page for rendering a JobListing\n * Pulls context based on slug in params { jobSlug }\n */\nexport default () => {\n  const { jobSlug } = useParams();\n  const navigate = useNavigate();\n  const [job, setJob] = useState<JobListing>(JobHistory[0]);\n\n  // Effect to load job from provided slug\n  // Navs to 404 if not found.\n  useEffect(() => {\n    const resolvedJob = JobHistory.find((listing) => listing.slug === jobSlug);\n    if (!resolvedJob) {\n      navigate(\"/404\");\n      return;\n    }\n    setJob(resolvedJob);\n  }, [jobSlug, navigate]);\n\n  return (\n    <CenterContentContainer>\n      <div>\n        <PageHeading\n          title={job.company}\n          subTitle={job.title}\n          contentCategory={`${job.startDate.getMonth()}/${job.startDate.getFullYear()} -\n                ${\n                  job.endDate\n                    ? `${job.endDate.getMonth()}/${job.endDate.getFullYear()}`\n                    : \"PRESENT\"\n                }`}\n          showBottomDivider\n        />\n        <Button text=\"HOME\" internalHref={\"/home\"} />\n        <Button text=\"COMPANY WEBSITE\" href={job.website} />\n      </div>\n      <div className=\"page-container\">\n        <SlideInAll>\n          <h2>Skills üß†</h2>\n          <HorizontalLine leftBrace={false} />\n          <SkillList skillSet={job.skills} />\n        </SlideInAll>\n        {job.richContent?.map((content) => (\n          <SlideInAll>\n            <h2>{content.heading}</h2>\n            <HorizontalLine leftBrace={false} />\n            {content.paragraphs.map((paragraph) => (\n              <p>{paragraph}</p>\n            ))}\n          </SlideInAll>\n        ))}\n      </div>\n    </CenterContentContainer>\n  );\n};\n"],"names":["JobHistory","startDate","Date","company","website","title","skills","SkillListRecord","description","slug","richContent","heading","paragraphs","endDate","javaScript","skillName","category","SkillCategory","typeScript","python","java","cSharp","stylesheets","websockets","microservices","rest","react","angular","django","drf","express","socketIO","cypress","jest","unity","alexa","twitch","docker","nginx","postgres","SQL","kubernetes","jenkins","git","ciCd","heroku","aws","gcp","azure","storybook","webpack","babel","agile","planning","jira","confluence","interviewing","collaboration","skillBuilding","selfDirection","timeManagement","linux","arduino","reverseEngineering","afterEffects","photoShop","hardwareMod","dmx","SkillListItem","skill","animationDelay","useState","generateAnimationDelay","className","style","SkillList","skillSet","Object","values","skillList","setSkillList","filter","setFilter","useEffect","value","getFilterCallback","generateClassNames","mono","capital","active","onClick","map","SlideInAll","children","childrenWithProps","React","child","Fragment","jobSlug","useParams","navigate","useNavigate","job","setJob","resolvedJob","listing","subTitle","contentCategory","getMonth","getFullYear","showBottomDivider","text","internalHref","href","leftBrace","content","paragraph"],"sourceRoot":""}